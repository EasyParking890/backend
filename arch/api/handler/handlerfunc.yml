AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31

Globals:
  Function:
    Timeout: 30
    Runtime: provided.al2
    Architectures: [arm64]
    MemorySize: 256
    Environment:
      Variables:
        LOG_LEVEL: !Ref LogLevel
        STAGE_NAME: !Ref StageName
        ACCOUNT_ID: !Sub "${AWS::AccountId}"
        REGION: !Sub "${AWS::Region}"

Parameters:
  LogRetentionInDays:
    Type: Number
    Default: 7
  StageName:
    Type: String
    Default: dev
  LogLevel:
    Type: String
    Default: Debug
    AllowedValues:
      - Info
      - Debug
      - Error

Resources: 
  HandlerLambdaRole:
    Type: AWS::IAM::Role
    Properties:
      RoleName: !Join ['-', [ ep-HandlerLambdaRole, !Ref AWS::Region]]
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Principal:
              Service:
                - lambda.amazonaws.com
            Action:
              - sts:AssumeRole
      Policies:
        - PolicyName: ep-HandlerLambdaPolicy
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
              - Effect: Allow
                Action:
                  - logs:PutLogEvents
                  - logs:CreateLogGroup
                  - logs:CreateLogStream
                Resource: !GetAtt HandlerFunctionLog.Arn
              
  HandlerFunctionLog:
    Type: AWS::Logs::LogGroup
    Properties:
      LogGroupName: !Join ["", ["/aws/lambda/", "ep-HandlerFunctionLog"]]
      RetentionInDays: !Ref LogRetentionInDays

  HandlerLambdaFunction:
    Type: AWS::Serverless::Function
    Properties:
      FunctionName: ep-HandlerLambdaFunction
      CodeUri: ../../../bin/api/handler/handler
      Handler: bootstrap
      ReservedConcurrentExecutions: 5     
      Role: !GetAtt HandlerLambdaRole.Arn

  HandlerIntegration:
    Type: 'AWS::ApiGatewayV2::Integration'
    Properties:
      ApiId: !ImportValue ep-APIGatewayBaseOut
      IntegrationType: AWS_PROXY
      IntegrationUri: !Sub
            - arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${Arn}/invocations
            - Arn: !GetAtt HandlerLambdaFunction.Arn
      IntegrationMethod: POST
      PayloadFormatVersion: '1.0'

  APIHandlerLambdaPermissionApiGateway:
    Type: AWS::Lambda::Permission
    Properties:
      FunctionName: !GetAtt HandlerLambdaFunction.Arn
      Action: lambda:InvokeFunction
      Principal: apigateway.amazonaws.com
      SourceArn: !Join ["", ["arn:", !Ref 'AWS::Partition', ":execute-api:", !Ref 'AWS::Region', ":", !Ref 'AWS::AccountId', ":", !ImportValue ep-APIGatewayBaseOut, "/*/*"]]

Outputs:
  HandlerIntegration:
    Value: !Ref HandlerIntegration
    Export:
      Name: ep-HandlerIntegrationOut

